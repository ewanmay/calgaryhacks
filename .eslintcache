[{"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx":"1","C:\\Workspaces\\wec-practice\\client\\src\\App.tsx":"2","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx":"3","C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx":"4","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx":"5","C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx":"6","C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx":"7","C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx":"8","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx":"9","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx":"10","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx":"11","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx":"12","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx":"13","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx":"14","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx":"15","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts":"16","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx":"17","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\Chat.tsx":"18","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\UserList.tsx":"19","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\CommonGames.tsx":"20","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\GameItem.tsx":"21","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoChat.tsx":"22","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoParticipant.tsx":"23","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\types.ts":"24","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\Profile.tsx":"25","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\AddFriendModal.tsx":"26","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\ConnectSteamModal.tsx":"27","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\SetPlayerModal.tsx":"28","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\GamesList.tsx":"29","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\Friends.tsx":"30","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\groups\\Groups.tsx":"31"},{"size":328,"mtime":1610480469272,"results":"32","hashOfConfig":"33"},{"size":459,"mtime":1610480469266,"results":"34","hashOfConfig":"33"},{"size":532,"mtime":1610480469270,"results":"35","hashOfConfig":"33"},{"size":308,"mtime":1610480469270,"results":"36","hashOfConfig":"33"},{"size":121,"mtime":1610480469269,"results":"37","hashOfConfig":"33"},{"size":120,"mtime":1610480469269,"results":"38","hashOfConfig":"33"},{"size":425,"mtime":1613323659720,"results":"39","hashOfConfig":"40"},{"size":2847,"mtime":1613324870063,"results":"41","hashOfConfig":"40"},{"size":532,"mtime":1613323659711,"results":"42","hashOfConfig":"40"},{"size":1147,"mtime":1613323659712,"results":"43","hashOfConfig":"40"},{"size":897,"mtime":1613323659714,"results":"44","hashOfConfig":"40"},{"size":278,"mtime":1613323659713,"results":"45","hashOfConfig":"40"},{"size":2726,"mtime":1613323659691,"results":"46","hashOfConfig":"40"},{"size":896,"mtime":1613323659696,"results":"47","hashOfConfig":"40"},{"size":3165,"mtime":1613325880689,"results":"48","hashOfConfig":"40"},{"size":600,"mtime":1613323659725,"results":"49","hashOfConfig":"40"},{"size":1944,"mtime":1613323659709,"results":"50","hashOfConfig":"40"},{"size":3219,"mtime":1613323659675,"results":"51","hashOfConfig":"40"},{"size":1020,"mtime":1613323659682,"results":"52","hashOfConfig":"40"},{"size":2876,"mtime":1613323659692,"results":"53","hashOfConfig":"40"},{"size":4122,"mtime":1613324181600,"results":"54","hashOfConfig":"40"},{"size":3428,"mtime":1613323659686,"results":"55","hashOfConfig":"40"},{"size":2315,"mtime":1613323659687,"results":"56","hashOfConfig":"40"},{"size":1585,"mtime":1613323659715,"results":"57","hashOfConfig":"40"},{"size":2612,"mtime":1613323659707,"results":"58","hashOfConfig":"40"},{"size":1572,"mtime":1613323659701,"results":"59","hashOfConfig":"40"},{"size":1859,"mtime":1613323659702,"results":"60","hashOfConfig":"40"},{"size":3607,"mtime":1613323659707,"results":"61","hashOfConfig":"40"},{"size":987,"mtime":1613323659704,"results":"62","hashOfConfig":"40"},{"size":2722,"mtime":1613323659703,"results":"63","hashOfConfig":"40"},{"size":5324,"mtime":1613323659699,"results":"64","hashOfConfig":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1334qxy",{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1w7oxx",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx",[],["148","149"],"C:\\Workspaces\\wec-practice\\client\\src\\App.tsx",["150","151"],"import React, { useContext, useEffect } from 'react';\nimport { AppContext } from './context/context';\nimport './App.css';\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext)\n  \n  useEffect(() => {\n    setInterval(() => state.socket.emit(\"hello\"), 2000);    \n    state.socket.on('hello-response', () => console.log(\"server said hello\"));\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      Hello there\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx",["152","153"],"import { State } from \"./types\";\r\n\r\nexport const reducer = (state: State, action: Record<string, any>): State => {\r\n  switch (action.type) {\r\n    case \"ACTION_TYPE_1\": {\r\n      return state;\r\n    };\r\n    case \"ACTION_TYPE_2\": {\r\n      return state;\r\n    };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx",[],["154","155"],"C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx",["156"],"import React, { useContext, useEffect } from 'react';\nimport { AppContext } from './context/context';\nimport './App.css';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Auth from './components/pages/Auth';\nimport Landing from './components/pages/Landing';\nimport Groups from './components/pages/groups/Groups';\nimport Profile from './components/pages/profile/Profile';\nimport Register from './components/pages/Register';\nimport Navbar from './components/shared/Navbar';\nimport { CommonGames, Friend, FriendRequest, Game, Steam } from './context/types';\nimport useSound from 'use-sound'\n\n//@ts-ignore\nimport clickSfx from './sounds/appbutton_click.mp3'\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext)\n  useEffect(() => {\n    state.socket.on('available-games', (games: CommonGames) => dispatch({ type: \"SET_COMMON_GAMES\", payload: games }))\n    state.socket.on('game-selected', (msg: Game) => dispatch({ type: \"SELECT_GAME\", payload: msg }))\n    state.socket.on('get-friends-response', (friends: Friend[]) => dispatch({ type: \"SET_FRIENDS\", payload: friends }))    \n    state.socket.on('get-outgoing-friend-requests-response', (friendRequests: FriendRequest[]) => dispatch({ type: \"SET_OUTGOING_FRIEND_REQUESTS\", payload: friendRequests }))    \n    state.socket.on('get-incoming-friend-requests-response', (friendRequests: FriendRequest[]) => dispatch({ type: \"SET_INCOMING_FRIEND_REQUESTS\", payload: friendRequests }))        \n    state.socket.on('accept-friend-request-response', (friendRequests: FriendRequest[]) => dispatch({ type: \"SET_INCOMING_FRIEND_REQUESTS\", payload: friendRequests }))\n    state.socket.on(\"get-steam-info-response\", (data: Steam) => {\n      dispatch({ type: \"GET_STEAM_INFO\", payload: data })\n    })\n  }, [dispatch, state.authState, state.socket])\n\n  const history = useHistory()\n\n  // console.log(clickSfx)\n  const [playClickSound] = useSound(clickSfx, { volume: 1 })\n\n  useEffect(()=>{\n    document.body.addEventListener(\"click\", function (evt) {\n      // console.log(\"body clicked\");\n      playClickSound() // TODO not working?\n    }, true);\n  },[])\n\n  const handleNoAuth = () => {\n    if (!state.authState.loggedIn) {\n      history.push(\"/\")\n    }\n    return state.authState.loggedIn ? <Redirect to=\"/profile\" /> : <Auth />\n  }\n\n  return (\n    <div className=\"App flex column nowrap\">\n      {state.authState.loggedIn && <Navbar></Navbar>}\n      <Switch>\n        <Route path=\"/\" exact >\n          {handleNoAuth()}\n        </Route>\n        <Route path=\"/home\">\n          <Landing />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/groups\">\n          <Groups />\n        </Route>\n        <Route path=\"/sign-up\">\n          <Register />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx",["157"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppContext } from '../../context/context';\r\nimport { AuthState } from '../../context/types';\r\nimport { nameValidation } from '../../utils/inputUtils';\r\nimport './Auth.css';\r\n\r\nfunction Auth() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState([] as string[])\r\n\r\n  useEffect(() => {\r\n    state.socket.on('login-response', (login: AuthState) => {\r\n      dispatch({ type: \"LOGIN\", payload: login })\r\n    })\r\n  }, [])\r\n\r\n  const logIn = () => {\r\n    const usernameError = nameValidation(\"Username\", username)\r\n    const passwordError = nameValidation(\"Password\", password)\r\n\r\n    if (!usernameError && !passwordError) {\r\n      state.socket.emit(\"login\", { username, password })\r\n    }\r\n    else {\r\n      const allErrors: string[] = [];\r\n      [usernameError, passwordError].forEach((error: string | null) => {\r\n        if (error && error.length > 0) {\r\n          allErrors.push(error)\r\n        }\r\n      })\r\n      setErrorMessage(allErrors)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"auth-page col-12 p-0 fill flex center\" onKeyPress ={(e) => { if (e.key === \"Enter\") { logIn() } }}>\r\n      <div className=\"col-4 p-0 flex center\">\r\n        <h3>Welcome to Games Night</h3>\r\n        <div className=\"error-message col-12\">\r\n          {state.authState.errorMessage}\r\n          {errorMessage.map((error: string) => (\r\n            <div className=\"col-12 p-0 error-message\">\r\n              {error}\r\n            </div>))\r\n          }\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Username\"\r\n            className=\"col-12\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(value: ChangeEvent<any>) => setUsername(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            aria-label=\"Password\"\r\n            aria-describedby=\"basic-addon2\"\r\n            type='password'\r\n            onChange={(value: ChangeEvent<any>) => setPassword(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n\r\n        <Button onClick={() => logIn()}>Log in</Button>\r\n        <div className=\"col-12\" style={{margin: 10}}>\r\n          New here? <Link style={{color: \"white\"}} to=\"/sign-up\"> Sign up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx",["158"],"import React, { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../context/context';\r\nimport './Landing.css';\r\n\r\nfunction Landing() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex fill center landing\">  \r\n          <div className=\"col-12 p-0\" style={{ position: 'absolute', top: 0, fontSize: 20, fontStyle: 'italic'}} >\r\n            Welcome back, {state.authState.username}\r\n          </div>\r\n          <div className='test'>\r\n            <div className=\"col-12 p-0 header\">\r\n              Activity\r\n            </div>\r\n            <div className=\"col-12 p-0 header\">\r\n                Find Group\r\n            </div>\r\n            <div className=\"col-12 p-0 header\">\r\n                Recent Games\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx",["159"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../context/context';\r\nimport { AuthState } from '../../context/types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { emailValidation, nameValidation } from '../../utils/inputUtils';\r\n\r\nfunction Register() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState([] as string[])\r\n  const [email, setEmail] = useState('')\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    state.socket.on(\"register-response\", (res: AuthState) => {\r\n      if (res.loggedIn) {\r\n        dispatch({ type: \"LOGIN\", payload: res })\r\n        history.push(\"/\");\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const registerUser = () => {\r\n    const usernameError = nameValidation(\"Username\", username)\r\n    const passwordError = nameValidation(\"Password\", password)\r\n    const emailError = emailValidation(email)\r\n\r\n    if (!usernameError && !passwordError && !emailError) {\r\n      state.socket.emit(\"register\", { username, password, email })\r\n    }\r\n    else {\r\n      const allErrors: string[] = [];\r\n      [usernameError, passwordError, emailError].forEach((error: string | null) => {\r\n        if (error && error.length > 0) {\r\n          allErrors.push(error)\r\n        }\r\n      })\r\n      setErrorMessage(allErrors)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page col-12 p-0 flex center fill\">\r\n      <div className=\"col-4 p-0 flex center\">\r\n        <h3>Join the club</h3>\r\n        <div className=\"error-message col-12\">\r\n          {state.authState.errorMessage}\r\n          {errorMessage.map((error: string) => (\r\n            <div className=\"col-12 p-0 error-message\">\r\n              {error}\r\n            </div>))\r\n          }\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Email\"\r\n            aria-label=\"Email\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setEmail(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Username\"\r\n            className=\"col-12\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(value: ChangeEvent<any>) => setUsername(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            aria-label=\"Password\"\r\n            aria-describedby=\"basic-addon2\"\r\n            type='password'\r\n            onChange={(value: ChangeEvent<any>) => setPassword(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Button onClick={() => registerUser()}>Sign up</Button>\r\n\r\n        <div className=\"col-12 mt-3\">\r\n          Already have an account? <Link to=\"/\">Log in</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx",["160","161","162"],"import React, { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../context/context';\r\nimport { Navbar as BootstrapNavbar } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './Navbar.css'\r\nimport { faUser, faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faSignOutAlt, faHome, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Navbar() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const signout = () => {\r\n    history.push(\"/\");\r\n    dispatch({ type: \"LOGOUT\" })\r\n  }\r\n\r\n  return (\r\n    <BootstrapNavbar expand=\"lg\" className=\"navbar fit\">\r\n      <BootstrapNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <BootstrapNavbar.Collapse id=\"basic-navbar-nav\">\r\n        <div className=\"col-12 p-0 flex space-between\">\r\n          <div className=\"col-auto flex center\">\r\n            {/* <Link className=\"navlink p-1\" to=\"/home\">\r\n              <FontAwesomeIcon icon={faHome} className='ic'/>\r\n              Home\r\n            </Link> */}\r\n            <Link className=\"navlink p-1\" to=\"/profile\">\r\n              <FontAwesomeIcon icon={faUserCircle} className='ic'/>\r\n              Profile\r\n            </Link>\r\n            <Link className=\"navlink p-1\" to=\"/groups\">\r\n              <FontAwesomeIcon icon={faUsers} className='ic'/>\r\n              Groups\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"p-1\" style={{marginRight: 280}}>\r\n            Games Night\r\n          </div>\r\n\r\n          <div className=\"p-1 pointer\" onClick={signout}>            \r\n            <FontAwesomeIcon icon={faSignOutAlt} className='ic' style={{marginBottom: -1}}/>\r\n            Logout\r\n          </div>\r\n\r\n        </div>\r\n      </BootstrapNavbar.Collapse>\r\n    </BootstrapNavbar>\r\n  );\r\n}\r\n\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\Chat.tsx",["163","164"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { AppContext } from '../context/context'\r\nimport { ClientMessage, ServerMessage } from '../context/types'\r\nimport './Chat.css'\r\nconst EMOJIS = require('smile2emoji').emojiMap;\r\n\r\nconst TIMESTAMP_OPTIONS = { hour: '2-digit', minute: '2-digit', hour12: false }\r\n\r\n\r\nfunction emojify(text: string) {\r\n  for (const [trigger, emoji] of Object.entries(EMOJIS)) {\r\n    text = text.replace(trigger as string, emoji as string)\r\n  }\r\n  return text\r\n}\r\ninterface MessageProps {\r\n  m: ServerMessage\r\n}\r\n\r\nfunction Message({m}: MessageProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const {username, messageContents, date} = m\r\n\r\n  function renderTime(date: string) {\r\n    const d = new Date(date)\r\n    return d.toLocaleTimeString('en-US', TIMESTAMP_OPTIONS)\r\n  }\r\n\r\n  const isSelf = username === state.authState.username\r\n  const msgStyle = {\r\n    background: isSelf ? '#35917d' : '#eee',\r\n    color: isSelf ? 'white' : 'black',\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='msgContainer'\r\n      style={{\r\n        justifyContent: isSelf ? 'flex-end' : 'flex-start',\r\n      }}\r\n    >\r\n      <li\r\n        style={{\r\n          alignItems: isSelf ? 'flex-end' : 'flex-start',\r\n        }}\r\n      >\r\n        <div className='details'>\r\n          <span className='timestamp'>{renderTime(date)}</span>\r\n          <span className='username'>{username}</span>\r\n        </div>\r\n        <div className='msg' style={msgStyle}>\r\n          {messageContents}\r\n        </div>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  videoOn: boolean\r\n}\r\nfunction Chat({videoOn}: Props) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [text, setText] = useState('')\r\n  const [messages, setMessages] = useState([] as ServerMessage[])\r\n\r\n  console.log('chat, videoOn', videoOn)\r\n\r\n  function createMessage(msg: string): ClientMessage  {\r\n    return {\r\n      username: state.authState.username,\r\n      messageContents: msg\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    state.socket.on('message-log', function (msgs: ServerMessage[]) {\r\n      console.log('got messages', msgs.length)\r\n      setMessages(msgs)\r\n    })\r\n  }, [state.socket])\r\n\r\n\r\n  useEffect(() => {\r\n    // when msgs change, scroll to bottom\r\n    const elem = document.getElementById('messages')\r\n    if (elem) elem.scrollTop = elem.scrollHeight\r\n  }, [messages])\r\n\r\n  function handleSend(e: any) {\r\n    e.preventDefault() // prevent refresh\r\n    if (text.trim()) {\r\n      state.socket.emit('add-chat-message', createMessage(text))\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  return (\r\n    <div id='chat' style={{maxHeight: videoOn ? '38vh' : ''}}>\r\n      <div id='messagesContainer' style={{maxHeight: videoOn ? '90%' : '95%'}}>\r\n        <ul id='messages'>\r\n          {messages.map((m: ServerMessage, i) => (\r\n            <Message key={i} m={m} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <form id='chat-form' onSubmit={handleSend}>\r\n        <input\r\n          id='chat-input'\r\n          value={text}\r\n          onChange={e => setText(emojify(e.target.value))}\r\n          autoComplete='off'\r\n        />\r\n        <button>Send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\UserList.tsx",["165","166","167"],"\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AppContext } from '../context/context'\r\nimport { User } from '../context/types'\r\nimport './UserList.css'\r\n\r\ninterface LobbyInfo {\r\n  users: string[],\r\n  lobbyCode: string\r\n}\r\n\r\nfunction Userlist() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [userList, setUserList] = useState([] as string[])\r\n\r\n  useEffect(() => {\r\n    state.socket.on('lobby-updated', function ({ users }: LobbyInfo) {\r\n      setUserList(users)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div id='userlist'>\r\n      <div>Online ({userList.length})</div>\r\n      {userList.map((username: string, i: number) => {\r\n        const isSelf = username === state.authState.username\r\n        return (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              fontWeight: isSelf ? 'bold' : 'normal'\r\n            }}\r\n          >\r\n            {username + (isSelf ? ' (You)' : '')}\r\n          </p>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Userlist","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\CommonGames.tsx",["168","169"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../../context/context';\r\nimport { Game } from '../../context/types';\r\nimport GameItem from './GameItem';\r\n\r\nfunction CommonGames() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [freeGamesFilter, setFreeGamesFilter] = useState(true)\r\n  const [steamGamesFilter, setSteamGamesFilter] = useState(true)\r\n  const [epicGamesFilter, setEpicGamesFilter] = useState(true)\r\n\r\n  useEffect(() => {\r\n    state.socket.on('filter-free-games-changed', (filter: any) => {\r\n      setFreeGamesFilter(filter)\r\n    })\r\n    state.socket.on('filter-steam-games-changed', (filter: any) => {\r\n      setSteamGamesFilter(filter)\r\n    })\r\n    state.socket.on('filter-epic-games-changed', (filter: any) => {\r\n      setEpicGamesFilter(filter)\r\n    })\r\n  }, [])\r\n\r\n  const updateFreeGamesFilter = (event: any) => {\r\n    state.socket.emit('filter-free-games', event.target.checked)\r\n  }\r\n  const updateSteamGamesFilter = (event: any) => {\r\n    state.socket.emit('filter-steam-games', event.target.checked)\r\n  }\r\n  const updateEpicGamesFilter = (event: any) => {\r\n    state.socket.emit('filter-epic-games', event.target.checked)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex fill center top landing column\" style={{overflowX: 'hidden'}}>\r\n      <div className=\"col-12 header\">\r\n        Shared Games\r\n      </div>\r\n      <div className=\"col-12 game-list-item flex space-between \">\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input checked={freeGamesFilter} className=\"custom-control-input\" type=\"checkbox\" id=\"freeGames\" onChange={updateFreeGamesFilter} />\r\n          <label className=\"custom-control-label\" htmlFor=\"freeGames\"> Free Games </label>\r\n        </div>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input checked={steamGamesFilter} className=\"custom-control-input\" type=\"checkbox\" id=\"steamGames\" onChange={updateSteamGamesFilter} />\r\n          <label className=\"custom-control-label\" htmlFor=\"steamGames\"> Steam Games </label>\r\n        </div>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input checked={epicGamesFilter} className=\"custom-control-input\" type=\"checkbox\" id=\"epicGames\" onChange={updateEpicGamesFilter} />\r\n          <label className=\"custom-control-label\" htmlFor=\"epicGames\"> Epic Games </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 p-0 fill left top center common-game-container\" style={{display: 'contents'}}>\r\n        {state.commonGames.steamGames.map((g: Game) => (<GameItem game={g} key={g.appid}/>))}\r\n        {state.commonGames.epicGames.map((g: Game) => (<GameItem game={g} key={g.appid}/>))}\r\n        {state.commonGames.freeGames.map((g: Game) => (<GameItem game={g} key={g.appid}/>))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommonGames;\r\n\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\GameItem.tsx",["170","171"],"import { faPlayCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useContext } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../context/context';\r\nimport { Game, GameSource } from '../../context/types';\r\n\r\nimport './GameItem.css'\r\n\r\ninterface GameItemProps {\r\n  game: Game,\r\n  showSetPlayer?: boolean,\r\n  setPlayerModal?: any,\r\n  setOpenGame?: any\r\n}\r\n\r\nexport default function GameItem({ game, showSetPlayer, setOpenGame, setPlayerModal }: GameItemProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  const voteForFreeGame = (event: any) => {\r\n    console.log(\"Target: \", event.target)\r\n    state.socket.emit('vote-for-free-game', state.authState.username, event.target.id)\r\n  }\r\n  const voteForSteamGame = (event: any) => {\r\n    console.log(\"Target: \", event.target)\r\n    state.socket.emit('vote-for-steam-game', state.authState.username, event.target.id)\r\n  }\r\n  const voteForEpicGame = (event: any) => {\r\n    console.log(\"Target: \", event.target)\r\n    state.socket.emit('vote-for-epic-game', state.authState.username, event.target.id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex game-list-item space-between\">\r\n      {game.source === GameSource.Free && (\r\n        <div className=\"col-12 px-0 game-list-item cursor flex space-between\">\r\n          <a className=\"col-4 flex left\" href={game.website} target=\"_blank\" rel=\"noreferrer\">\r\n            <b style={{ marginRight: 4 }}>{game.name}</b>\r\n          </a>\r\n          {!showSetPlayer && (\r\n            <div className=\"flex center\">\r\n              <div className=\"test\">\r\n                votes: {game.votes ? game.votes : \"0\"}\r\n              </div>\r\n              <Button id={game.appid} className=\"mx-2\" onClick={voteForFreeGame}>Vote</Button>\r\n            </div>\r\n          )}\r\n\r\n          {game.minPlayers && game?.minPlayers > 0 && game.maxPlayers && game.maxPlayers > 0 &&\r\n            (<div className=\"col-2\">\r\n              <div className=\"\">\r\n                {game.minPlayers}-{game.maxPlayers} players\r\n              </div>\r\n            </div>)\r\n          }\r\n          <div className=\"col-3 flex center\">\r\n            <i className=\"col-auto flex center\">\r\n            </i>\r\n          </div>\r\n        </div>)}\r\n      {game.source === GameSource.Epic && <a href={game.website} target=\"_blank\" rel=\"noreferrer\">\r\n        {game.name}\r\n      </a>}\r\n      {game.source === GameSource.Steam && (\r\n        <div className=\"col-12 px-0 game-list-item cursor flex space-between \">\r\n          <a className=\"col-4 flex left\" href={game.website} target=\"_blank\" rel=\"noreferrer\">\r\n            <b style={{ marginRight: 4 }}>{game.name}</b>\r\n            <i>(Steam)</i>\r\n          </a>\r\n          {!showSetPlayer && (\r\n            <div className=\"flex center\">\r\n              <div className=\"test2\">\r\n              votes: {game.votes ? game.votes : \"0\"}\r\n              </div>\r\n              <Button id={game.appid} className=\"mx-2\" onClick={voteForSteamGame}>Vote</Button>\r\n            </div>\r\n          )}\r\n          {game.minPlayers === 0 && game.maxPlayers === 0 && showSetPlayer &&\r\n            (<div className=\"col-2\">\r\n              <div className=\"\">\r\n                <Button onClick={() => { setPlayerModal(true); setOpenGame(game) }}>Set Players</Button>\r\n              </div>\r\n            </div>)\r\n          }\r\n\r\n          {game.minPlayers && game.minPlayers > 0 && game.maxPlayers && game.maxPlayers > 0 &&\r\n            (<div className=\"col-2\">\r\n              <div className=\"\">\r\n                {game.minPlayers}-{game.maxPlayers} players\r\n              </div>\r\n            </div>)\r\n          }\r\n          {/* Preferred min: Preferred max: player */}\r\n          <a className=\"col-3 flex center\" href={`steam://run/${game.appid}//`} target='_blank' rel=\"noreferrer\">\r\n            <i className=\"col-auto flex center\">\r\n              Open in Steam\r\n              <FontAwesomeIcon size=\"2x\" className=\"px-2\" icon={faPlayCircle} />\r\n            </i>\r\n          </a>\r\n        </div>)\r\n      }\r\n    </div >\r\n  );\r\n}\r\n\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoChat.tsx",["172","173","174"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from '../context/context';\r\nimport Video from 'twilio-video';\r\nimport { Button } from 'react-bootstrap';\r\nimport VideoParticipant from './VideoParticipant'\r\n\r\ninterface Props {\r\n  roomName: string\r\n  setVideoOn: (x: boolean) => void\r\n}\r\n\r\nconst VideoChat = ({ roomName, setVideoOn }: Props) => {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [room, setRoom] = useState(null as any);\r\n  const [participants, setParticipants] = useState([] as any[]);\r\n  const [token, setToken] = useState('')\r\n  \r\n  useEffect(() => {\r\n    return () => leaveVideo() // leave video on unmount // TODO not working   \r\n  }, [])\r\n  \r\n  const participantConnected = (participant: any) => {\r\n    setParticipants((prevParticipants: any) => [...prevParticipants, participant]);\r\n  };\r\n\r\n  const participantDisconnected = (participant: any) => {\r\n    setParticipants((prevParticipants: any) =>\r\n      prevParticipants.filter((p: any) => p !== participant)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    if (token) {\r\n      Video.connect((token), {\r\n        name: roomName\r\n      }).then((room: any) => {\r\n        setRoom(room);    \r\n        setVideoOn(true)\r\n        room.on('participantConnected', participantConnected);\r\n        room.on('participantDisconnected', participantDisconnected);\r\n        room.participants.forEach(participantConnected);\r\n      });\r\n    }\r\n      \r\n    return () => {\r\n      setRoom((currentRoom: any) => {\r\n        if (currentRoom && currentRoom.localParticipant.state === 'connected') {\r\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication: any) {\r\n            trackPublication.track.stop();\r\n          });\r\n          currentRoom.disconnect();\r\n          return null;\r\n        } else {\r\n          return currentRoom;\r\n        }\r\n      });\r\n    };\r\n  }, [roomName, token]);\r\n\r\n  const leaveVideo = () => {\r\n    console.log('leaving video')\r\n    setToken('');\r\n    if (room) {\r\n      room.disconnect()\r\n    }\r\n    setParticipants([])\r\n    setVideoOn(false)\r\n  };\r\n\r\n\r\n  const getToken = () => {\r\n    state.socket.off('token')\r\n    state.socket.once('token', (token: string) => {\r\n      console.log(\"got token:\", token.slice(-10))\r\n      setToken(token);\r\n    })\r\n    state.socket.emit('get-token', state.authState.username)\r\n  };\r\n\r\n\r\n  const remoteParticipants = participants.map((participant: any) => (\r\n    <VideoParticipant key={participant.sid} participant={participant} />\r\n  ));\r\n\r\n\r\n  if (token) {\r\n    return (\r\n      <div id='video-chat-container'>  \r\n        <div id='video-chat'>\r\n          {room && (\r\n            <VideoParticipant\r\n              key={room?.localParticipant?.sid}\r\n              participant={room?.localParticipant}\r\n            />\r\n          )}          \r\n          {remoteParticipants}\r\n        </div>\r\n        <div className=\"col-12 flex fill\" style={{justifyContent: 'flex-end'}}>\r\n          <div className=\"col-1\" style={{marginRight: 20}}>\r\n            <Button onClick={leaveVideo}>Leave Video</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (      \r\n      <div className=\"col-12 flex fill\" style={{justifyContent: 'flex-end'}}>\r\n        <div className=\"col-1\" style={{marginRight: 20}}>\r\n          <Button onClick={getToken}>Join Video</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoChat\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoParticipant.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\types.ts",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\Profile.tsx",["175","176"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../../context/context';\r\nimport { Game } from '../../../context/types';\r\nimport ConnectSteamModal from './ConnectSteamModal';\r\nimport './Profile.css';\r\nimport SetPlayerModal from './SetPlayerModal';\r\nimport GamesList from './GamesList';\r\nimport Friends from './Friends';\r\nimport AddFriendModal from './AddFriendModal';\r\n\r\nfunction Profile() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [showSteamModal, setShowSteamModal] = useState(false)\r\n  const [showPlayerModal, setShowPlayerModal] = useState(false)\r\n  const [showFriendModal, setShowFriendModal] = useState(false)\r\n  const [openGame, setOpenGame] = useState({} as Game)\r\n  const steam = state.profile.steam\r\n\r\n  const refreshUser = () => {\r\n    state.socket.emit(\"get-steam-info\", state.authState.username)\r\n  }\r\n\r\n  useEffect(() => {\r\n    state.socket.emit(\"get-steam-info\", state.authState.username)\r\n    state.socket.emit('get-friends', state.authState.username)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"fill col-12 p-0 flex center column\">\r\n      {steam.steamUsername.length === 0 && (<Button onClick={() => setShowSteamModal(true)}>Connect Steam Account</Button>)}\r\n      {steam.steamUsername.length !== 0 && steam.games.length === 0 && (\r\n        <div className=\"col-12 p-0\">\r\n          Steam account connected, but no games found. Make sure \"Game details\" is set to Public.\r\n          You can find your game privacy settings\r\n          <a href={`https://steamcommunity.com/profiles/${state.profile.steam.steamId}/edit/settings`} target='_blank' rel=\"noreferrer\">\r\n            {' '}here\r\n          </a>.\r\n          <Button className=\"m-2\" onClick={() => { refreshUser() }}>Refresh profile</Button>\r\n        </div>\r\n      )}\r\n      {showSteamModal && (<ConnectSteamModal close={() => { setShowSteamModal(false) }}></ConnectSteamModal>)}\r\n      {showPlayerModal && (<SetPlayerModal game={openGame} close={() => setShowPlayerModal(false)}></SetPlayerModal>)}      \r\n      {showFriendModal && (<AddFriendModal close={() => setShowFriendModal(false)}/>)}\r\n      <div className=\"col-12 p-0 fill center\">\r\n        <Friends setShowFriendModal={setShowFriendModal}/>\r\n      </div>\r\n      {steam.games.length > 0 && (<GamesList setPlayerModal={setShowPlayerModal} setOpenGame={setOpenGame}></GamesList>)}\r\n      {/* TODO add a refresh button to update your GamesList (refetch from steam) */}\r\n      {/* TODO add a button to reset your steam ID */}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\AddFriendModal.tsx",["177"],"import React, { ChangeEvent, useContext, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../../context/context';\r\n\r\ninterface AddFriendModalProps {\r\n  close: () => void\r\n}\r\n\r\nfunction AddFriendModal({ close }: AddFriendModalProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [friendName, setFriendName] = useState(\"\")\r\n\r\n  const addFriend = () => {\r\n    state.socket.emit(\"send-friend-request\", state.authState.username, friendName)\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-background flex center\">\r\n      <div className=\"modal flex center column\">\r\n        <div className=\"modal-header\">\r\n          Add Friend\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          Enter their username below\r\n        </div>\r\n        <div className=\"error-message\">\r\n          {state.profile.steam.steamError}\r\n        </div>\r\n        <InputGroup className=\"mb-3 flex center\">\r\n          <FormControl\r\n            placeholder=\"Friend Username\"\r\n            aria-label=\"Friend Username\"\r\n            className=\"col-8\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setFriendName(value.target.value)}\r\n          />\r\n          <div className=\"col-12 p-0\">\r\n            <Button variant=\"secondary\" onClick={() => close()}>Close</Button>\r\n            <Button className=\"m-3\" onClick={addFriend}>Send</Button>\r\n          </div>\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddFriendModal;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\ConnectSteamModal.tsx",["178"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../../context/context';\r\n\r\ninterface ConnectSteamModalProps {\r\n  close: any\r\n}\r\n\r\nfunction ConnectSteamModal({ close }: ConnectSteamModalProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  const [steamId, setSteamId] = useState(\"\")\r\n  const connectSteamId = () => {\r\n    state.socket.emit(\"add-steamid\", state.authState.username, steamId)\r\n    state.socket.on(\"steamid-added\", (succeeded: boolean) => {\r\n      close()\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n  return (\r\n    <div className=\"modal-background flex center\">\r\n      <div className=\"modal flex center column\">\r\n        <div className=\"modal-header\">\r\n          Connect Steam ID\r\n        </div>\r\n        <div className=\"error-message\">\r\n          {state.profile.steam.steamError}\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          You can find your Steam ID\r\n          <a className=\"pl-1\" style={{color:\"lightblue\"}} href=\"https://store.steampowered.com/account/\" target='_blank' rel=\"noreferrer\">\r\n            here\r\n          </a>\r\n        </div>\r\n        <InputGroup className=\"mb-3 flex center col-8\">\r\n          <FormControl\r\n            placeholder=\"Steam ID\"\r\n            aria-label=\"Steam ID\"\r\n            className=\"col-12\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setSteamId(value.target.value)}\r\n          />\r\n          <div className=\"col-12 p-0\">\r\n            <Button className=\"m-3\" onClick={connectSteamId}>Connect</Button>\r\n            <Button variant=\"secondary\" onClick={() => close()}>Close</Button>\r\n          </div>\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConnectSteamModal;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\SetPlayerModal.tsx",["179"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../../context/context';\r\nimport { Game } from '../../../context/types';\r\n\r\ninterface ConnectSteamModalProps {\r\n  close: any,\r\n  game: Game\r\n}\r\n\r\nfunction SetPlayerModal({ close, game }: ConnectSteamModalProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [min, setMin] = useState(0)\r\n  const [max, setMax] = useState(0)\r\n  const [inputError, setInputError] = useState(\"\")\r\n\r\n  const isNumeric = (str: string) => {\r\n    if (typeof str != \"string\") return false // we only process strings!  \r\n    const trimmed: any = str.trim();\r\n    const parsedInt = parseInt(trimmed as string);\r\n    return !isNaN(trimmed as number) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n      !isNaN(parsedInt) // ...and ensure strings of whitespace fail\r\n  }\r\n\r\n  const setMinPlayers = (appid: any, minPlayers: string) => {\r\n    if (!isNumeric(minPlayers)) {\r\n      setInputError(\"Min needs to be numeric\")\r\n    }\r\n    else {\r\n      setInputError(\"\")\r\n    }\r\n    state.socket.emit('change-game-min-players', ({ appid, minPlayers }))\r\n    setMin(parseInt(minPlayers.trim()))\r\n  }\r\n\r\n  const setMaxPlayers = (appid: any, maxPlayers: string) => {\r\n    if (!isNumeric(maxPlayers)) {\r\n      setInputError(\"Max needs to be numeric\")\r\n      return\r\n    }\r\n    else {\r\n      setInputError(\"\")\r\n      state.socket.emit('change-game-max-players', ({ appid, maxPlayers }))\r\n      setMax(parseInt(maxPlayers.trim()))\r\n    }\r\n  }\r\n\r\n  const setMinMaxPlayers = () => {\r\n\r\n    if (min > max) {\r\n      setInputError(\"Max needs to be greater than or equal to minimum players allowed\")\r\n    }\r\n    else {\r\n      setInputError(\"\")\r\n      state.socket.emit('update-preferred-players', state.authState.username, game.appid, min, max)\r\n      close();\r\n    }\r\n    // update-preferred-players\r\n  }\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n  return (\r\n    <div className=\"modal-background flex center\">\r\n      <div className=\"modal flex center column\">\r\n        <div className=\"modal-header\">\r\n          Set player minimums and maximum for game\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          This is taken into account with other inputs to provide an accurate count.\r\n        </div>\r\n        <div className=\"modal-bordy error-message\">\r\n          {inputError}\r\n        </div>\r\n        <InputGroup className=\"flex center\">\r\n          <FormControl\r\n            placeholder={\"\" + (game.minPlayers ? game.minPlayers : 0)}\r\n            aria-label=\"Min Players\"\r\n            className=\"col-3\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setMinPlayers(game.appid, value.target.value)}\r\n          />\r\n          <div className=\"col-1 px-1 modal-body\">\r\n            to\r\n          </div>\r\n          <FormControl\r\n            placeholder={\"\" + (game.maxPlayers ? game.maxPlayers : 0)}\r\n            aria-label=\"Max Players\"\r\n            className=\"col-3\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setMaxPlayers(game.appid, value.target.value)}\r\n          />\r\n          <div className=\"col-12 py-0\">\r\n            <Button className=\"mx-2\" onClick={() => setMinMaxPlayers()}>Submit</Button>\r\n            <Button className=\"mx-2\" variant=\"secondary\" onClick={() => close()}>Close</Button>\r\n          </div>\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetPlayerModal;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\GamesList.tsx",["180"],"import React, { useContext } from 'react';\r\nimport { AppContext } from '../../../context/context';\r\nimport { Game } from '../../../context/types';\r\nimport GameItem from '../GameItem';\r\n\r\ninterface GamesListProps {\r\n  setOpenGame: any,\r\n  setPlayerModal: any\r\n}\r\n\r\n\r\nexport default function GamesList({ setOpenGame, setPlayerModal }: GamesListProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex fill center left column\">\r\n      <h4 className=\"p-1\">\r\n        Your Steam Games\r\n          </h4>\r\n      <div className=\"col-6 p-0 game-container left\">\r\n        {state.profile.steam.games.map((game: Game) => {\r\n          return (\r\n            <div className=\"col-12 px-0 game-list-item cursor flex space-between\">\r\n              <GameItem key={game.appid} game={game} setPlayerModal={setPlayerModal} setOpenGame={setOpenGame} showSetPlayer={true}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\profile\\Friends.tsx",["181","182","183"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../../context/context';\r\nimport { faCheck, faPlus, faTimes, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FriendRequest } from '../../../context/types';\r\n\r\ninterface FriendsProps {\r\n  setShowFriendModal: any\r\n}\r\n// get-steam-info\r\n\r\nexport default function Friends({ setShowFriendModal }: FriendsProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    state.socket.emit(\"get-outgoing-friend-requests\", state.authState.username)\r\n    state.socket.emit(\"get-incoming-friend-requests\", state.authState.username)\r\n  }, [])\r\n\r\n  const onAccept = (request: FriendRequest) => {\r\n    state.socket.emit(\"accept-friend-request\", request.id)\r\n  }\r\n\r\n\r\n  const deleteRequest = (request: FriendRequest) => {\r\n    state.socket.emit(\"delete-friend-request\", request.id, state.authState.username)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 center top flex\">\r\n      <div className=\"col-6 p-0 flex top center\">\r\n        <h5 className=\"m-0\">Friends List</h5>\r\n        {state.profile.friends.map(friend =>\r\n          <div className=\"col-12 p-0\">\r\n            {friend?.username}\r\n          </div>)}\r\n        <div className=\"col-auto cursor flex center\" onClick={() => setShowFriendModal(true)} style={{ color: \"lightgreen\" }}>\r\n          Add Friend <FontAwesomeIcon className=\"mx-2\" icon={faPlus}></FontAwesomeIcon>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-6 p-0 flex column center\">\r\n        <h5 className=\"m-0\"> Friend Requests</h5>\r\n        <div className=\"col-4 p-0 flex\">\r\n\r\n          <div className=\"col-6 flex column\">\r\n\r\n            <h6> Incoming </h6>\r\n            {state.profile.incomingRequests.map(request => (\r\n              <div>\r\n                {request.sending}\r\n                <FontAwesomeIcon onClick={() => onAccept(request)} style={{ color: \"lightgreen\" }} className=\"cursor mx-2\" icon={faCheck} />\r\n                <FontAwesomeIcon onClick={() => deleteRequest(request)} style={{ color: \"lightred\" }} icon={faTimes} className=\"cursor\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <h6> Outgoing </h6>\r\n            {state.profile.outgoingRequests.map(request => (\r\n              <div>\r\n                {request.receiving}\r\n                <FontAwesomeIcon onClick={() => deleteRequest(request)} style={{ color: \"lightred\" }} icon={faMinusCircle} className=\"cursor mx-2\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\groups\\Groups.tsx",["184","185"],"import React, { ChangeEvent, RefObject, useContext, useRef, useState, useEffect } from 'react';\r\nimport { faClipboard } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport { AppContext } from '../../../context/context';\r\nimport Chat from '../../Chat';\r\nimport Userlist from '../../UserList';\r\nimport VideoChat from '../../VideoChat';\r\nimport CommonGames from '../CommonGames';\r\nimport './Groups.css';\r\nimport GameItem from '../GameItem';\r\nimport { Game } from '../../../context/types';\r\n\r\nfunction Groups() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [lobbyCode, setLobbyCode] = useState('')\r\n  const [inLobby, setInLobby] = useState(false)\r\n  const [mostVotedGame, setMostVotedGame] = useState({} as Game)\r\n  const [videoOn, setVideoOn] = useState(false)\r\n  const inputRef = useRef({}) as RefObject<HTMLInputElement>\r\n\r\n  useEffect(() => {\r\n    return () => leaveLobby() // leave lobby on unmount    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let allGames = state.commonGames.steamGames.concat(state.commonGames.epicGames)\r\n    allGames = allGames.concat(state.commonGames.freeGames)\r\n    const max = allGames.filter(o => o.votes).reduce((prev: Game, current: Game) => ((prev?.votes?.length || 0) > (current?.votes?.length || 0)) ? prev : current, allGames[0])\r\n    setMostVotedGame(max);\r\n  }, [state.commonGames.epicGames, state.commonGames.freeGames, state.commonGames.steamGames])\r\n\r\n  const createLobby = () => {\r\n    // Ask server to create lobby\r\n\r\n    // Once created, set lobby code and change what we display somehow\r\n    state.socket.once('join-lobby-err', (msg: any) => console.log(msg)) // TODO\r\n    state.socket.once('joined-lobby', (res: any) => {\r\n      setInLobby(true)\r\n      setLobbyCode(res.lobbyCode)\r\n    })\r\n    state.socket.emit('create-lobby', state.authState.username);\r\n    state.socket.emit('get-games')\r\n  }\r\n\r\n  const joinLobby = () => {\r\n    console.log(\"Clicked join lobby\")\r\n    state.socket.once('join-lobby-err', (msg: any) => console.log(msg)) // TODO\r\n    state.socket.once('joined-lobby', ({ lobbyCode, users }: any) => {\r\n      console.log(\"LobbyCode:\", lobbyCode)\r\n      setInLobby(true)\r\n    })\r\n    state.socket.emit('join-lobby', { username: state.authState.username, lobbyCode })\r\n    state.socket.emit('get-games')\r\n  }\r\n\r\n  const leaveLobby = () => {\r\n    console.log(\"leaving lobby\")\r\n    state.socket.emit('leave-lobby', state.authState.username)\r\n    setInLobby(false)\r\n    setLobbyCode('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"fill flex center nowrap\">\r\n\r\n      {!inLobby && (\r\n        <div className=\"col-6 p-0 flex center column\">\r\n\r\n          <div id=\"groups-join-lobby\" className=\"mt-3\">\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                placeholder=\"Lobby Code\"\r\n                className=\"col-12\"\r\n                aria-label=\"Lobby Code\"\r\n                aria-describedby=\"basic-addon1\"\r\n                ref={inputRef}\r\n                onChange={(value: ChangeEvent<any>) => {\r\n                  if (inputRef && inputRef.current) {\r\n                    inputRef.current.value = value.target.value.toUpperCase()\r\n                  }\r\n                  setLobbyCode(value.target.value.toUpperCase())\r\n                }}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button onClick={() => joinLobby()}>Join Lobby</Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </div>\r\n          OR\r\n          <div id=\"groups-create-lobby\" className=\"m-3\">\r\n            <Button onClick={() => createLobby()}>Create Lobby</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {inLobby && (\r\n        <>\r\n          <div id='groups'>\r\n            <VideoChat roomName={lobbyCode} setVideoOn={setVideoOn}/>\r\n            <div id=\"groups-main\">\r\n              <div id=\"groups-left\">\r\n                <div className=\"p-3\">\r\n                  <div className='flex row' style={{ alignItems: 'center' }}>\r\n                    <Button onClick={() => leaveLobby()}>Leave Lobby</Button>\r\n                    <b className=\"pl-3\" id='code' style={{ fontFamily: 'monospace', fontSize: 17 }}>Code: {lobbyCode}</b>\r\n                    <div className='pointer' onClick={() => { navigator.clipboard.writeText(lobbyCode) }}>\r\n                      <FontAwesomeIcon icon={faClipboard} style={{ marginLeft: 5 }}></FontAwesomeIcon>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Userlist />\r\n              </div>\r\n              <div id=\"groups-middle\" style={{maxHeight: videoOn ? '40vh' : '80vh'}}>\r\n                <CommonGames />\r\n                {mostVotedGame?.appid && mostVotedGame?.votes && mostVotedGame?.votes?.length > 0 && (\r\n                  <div>\r\n                    Highest voted:\r\n                    <GameItem game={mostVotedGame}></GameItem>\r\n                  </div>)}\r\n              </div>\r\n              <div id=\"groups-right\">\r\n                <h5>Chat</h5>\r\n                <Chat videoOn={videoOn}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\n",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":6,"column":17,"nodeType":"192","messageId":"193","endLine":6,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":11,"column":6,"nodeType":"196","endLine":11,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":5,"column":27,"nodeType":"200","messageId":"201","endLine":7,"endColumn":6},{"ruleId":"198","severity":1,"message":"199","line":8,"column":27,"nodeType":"200","messageId":"201","endLine":10,"endColumn":6},{"ruleId":"186","replacedBy":"202"},{"ruleId":"188","replacedBy":"203"},{"ruleId":"194","severity":1,"message":"204","line":41,"column":5,"nodeType":"196","endLine":41,"endColumn":7,"suggestions":"205"},{"ruleId":"194","severity":1,"message":"206","line":19,"column":6,"nodeType":"196","endLine":19,"endColumn":8,"suggestions":"207"},{"ruleId":"190","severity":1,"message":"191","line":6,"column":17,"nodeType":"192","messageId":"193","endLine":6,"endColumn":25},{"ruleId":"194","severity":1,"message":"208","line":23,"column":6,"nodeType":"196","endLine":23,"endColumn":8,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"210","line":6,"column":10,"nodeType":"192","messageId":"193","endLine":6,"endColumn":16},{"ruleId":"190","severity":1,"message":"211","line":7,"column":24,"nodeType":"192","messageId":"193","endLine":7,"endColumn":30},{"ruleId":"190","severity":1,"message":"212","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":21,"column":17,"nodeType":"192","messageId":"193","endLine":21,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":63,"column":17,"nodeType":"192","messageId":"193","endLine":63,"endColumn":25},{"ruleId":"190","severity":1,"message":"213","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":13,"column":17,"nodeType":"192","messageId":"193","endLine":13,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":20,"column":6,"nodeType":"196","endLine":20,"endColumn":8,"suggestions":"214"},{"ruleId":"190","severity":1,"message":"191","line":7,"column":17,"nodeType":"192","messageId":"193","endLine":7,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":22,"column":6,"nodeType":"196","endLine":22,"endColumn":8,"suggestions":"215"},{"ruleId":"190","severity":1,"message":"191","line":18,"column":17,"nodeType":"192","messageId":"193","endLine":18,"endColumn":25},{"ruleId":"190","severity":1,"message":"216","line":28,"column":9,"nodeType":"192","messageId":"193","endLine":28,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":13,"column":17,"nodeType":"192","messageId":"193","endLine":13,"endColumn":25},{"ruleId":"194","severity":1,"message":"217","line":20,"column":6,"nodeType":"196","endLine":20,"endColumn":8,"suggestions":"218"},{"ruleId":"194","severity":1,"message":"219","line":59,"column":6,"nodeType":"196","endLine":59,"endColumn":23,"suggestions":"220"},{"ruleId":"190","severity":1,"message":"191","line":13,"column":17,"nodeType":"192","messageId":"193","endLine":13,"endColumn":25},{"ruleId":"194","severity":1,"message":"221","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":8,"suggestions":"222"},{"ruleId":"190","severity":1,"message":"191","line":10,"column":17,"nodeType":"192","messageId":"193","endLine":10,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":10,"column":17,"nodeType":"192","messageId":"193","endLine":10,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":12,"column":17,"nodeType":"192","messageId":"193","endLine":12,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":13,"column":17,"nodeType":"192","messageId":"193","endLine":13,"endColumn":25},{"ruleId":"190","severity":1,"message":"223","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":14,"column":17,"nodeType":"192","messageId":"193","endLine":14,"endColumn":25},{"ruleId":"194","severity":1,"message":"221","line":19,"column":6,"nodeType":"196","endLine":19,"endColumn":8,"suggestions":"224"},{"ruleId":"190","severity":1,"message":"191","line":16,"column":17,"nodeType":"192","messageId":"193","endLine":16,"endColumn":25},{"ruleId":"194","severity":1,"message":"225","line":25,"column":6,"nodeType":"196","endLine":25,"endColumn":8,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.socket'. Either include it or remove the dependency array.","ArrayExpression",["229"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["227"],["228"],"React Hook useEffect has a missing dependency: 'playClickSound'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state.socket'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state.socket'. Either include them or remove the dependency array.",["232"],"'faUser' is defined but never used.","'faHome' is defined but never used.","'state' is assigned a value but never used.","'User' is defined but never used.",["233"],["234"],"'voteForEpicGame' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'leaveVideo'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'setVideoOn'. Either include it or remove the dependency array. If 'setVideoOn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"React Hook useEffect has missing dependencies: 'state.authState.username' and 'state.socket'. Either include them or remove the dependency array.",["237"],"'Button' is defined but never used.",["238"],"React Hook useEffect has a missing dependency: 'leaveLobby'. Either include it or remove the dependency array.",["239"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"240","fix":"248"},{"desc":"240","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [state.socket]",{"range":"259","text":"260"},"Update the dependencies array to be: [playClickSound]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, state.socket]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, history, state.socket]",{"range":"265","text":"266"},{"range":"267","text":"260"},{"range":"268","text":"260"},"Update the dependencies array to be: [leaveVideo]",{"range":"269","text":"270"},"Update the dependencies array to be: [roomName, setVideoOn, token]",{"range":"271","text":"272"},"Update the dependencies array to be: [state.authState.username, state.socket]",{"range":"273","text":"274"},{"range":"275","text":"274"},"Update the dependencies array to be: [leaveLobby]",{"range":"276","text":"277"},[359,361],"[state.socket]",[2127,2129],"[playClickSound]",[758,760],"[dispatch, state.socket]",[908,910],"[dispatch, history, state.socket]",[521,523],[836,838],[704,706],"[leaveVideo]",[1883,1900],"[roomName, setVideoOn, token]",[1085,1087],"[state.authState.username, state.socket]",[766,768],[1106,1108],"[leaveLobby]"]