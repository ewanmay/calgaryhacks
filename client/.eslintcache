[{"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx":"1","C:\\Workspaces\\wec-practice\\client\\src\\App.tsx":"2","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx":"3","C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx":"4","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx":"5","C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx":"6","C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx":"7","C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx":"8","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx":"9","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx":"10","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx":"11","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx":"12","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx":"13","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx":"14","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Groups.tsx":"15","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Profile.tsx":"16","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx":"17","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts":"18","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx":"19"},{"size":328,"mtime":1610480469272,"results":"20","hashOfConfig":"21"},{"size":459,"mtime":1610480469266,"results":"22","hashOfConfig":"21"},{"size":532,"mtime":1610480469270,"results":"23","hashOfConfig":"21"},{"size":308,"mtime":1610480469270,"results":"24","hashOfConfig":"21"},{"size":121,"mtime":1610480469269,"results":"25","hashOfConfig":"21"},{"size":120,"mtime":1610480469269,"results":"26","hashOfConfig":"21"},{"size":425,"mtime":1613243649345,"results":"27","hashOfConfig":"28"},{"size":1443,"mtime":1613252105536,"results":"29","hashOfConfig":"28"},{"size":532,"mtime":1613237454258,"results":"30","hashOfConfig":"28"},{"size":359,"mtime":1613249145731,"results":"31","hashOfConfig":"28"},{"size":408,"mtime":1613252103407,"results":"32","hashOfConfig":"28"},{"size":278,"mtime":1613238644072,"results":"33","hashOfConfig":"28"},{"size":2636,"mtime":1613249703770,"results":"34","hashOfConfig":"28"},{"size":347,"mtime":1613248568419,"results":"35","hashOfConfig":"28"},{"size":3347,"mtime":1613252314149,"results":"36","hashOfConfig":"28"},{"size":958,"mtime":1613252225705,"results":"37","hashOfConfig":"28"},{"size":3123,"mtime":1613249254839,"results":"38","hashOfConfig":"28"},{"size":600,"mtime":1613247384179,"results":"39","hashOfConfig":"28"},{"size":1284,"mtime":1613252044862,"results":"40","hashOfConfig":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1334qxy",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1w7oxx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx",[],["86","87"],"C:\\Workspaces\\wec-practice\\client\\src\\App.tsx",["88","89"],"import React, { useContext, useEffect } from 'react';\nimport { AppContext } from './context/context';\nimport './App.css';\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext)\n  \n  useEffect(() => {\n    setInterval(() => state.socket.emit(\"hello\"), 2000);    \n    state.socket.on('hello-response', () => console.log(\"server said hello\"));\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      Hello there\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx",["90","91"],"import { State } from \"./types\";\r\n\r\nexport const reducer = (state: State, action: Record<string, any>): State => {\r\n  switch (action.type) {\r\n    case \"ACTION_TYPE_1\": {\r\n      return state;\r\n    };\r\n    case \"ACTION_TYPE_2\": {\r\n      return state;\r\n    };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx",[],["92","93"],"C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx",["94","95"],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx",["96"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppContext } from '../../context/context';\r\nimport { AuthState } from '../../context/types';\r\nimport { nameValidation } from '../../utils/inputUtils';\r\nimport './Auth.css';\r\n\r\nfunction Auth() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState([] as string[])\r\n\r\n  useEffect(() => {\r\n    state.socket.on('login-response', (login: AuthState) => {\r\n      dispatch({ type: \"LOGIN\", payload: login })\r\n    })\r\n  }, [])\r\n\r\n  const logIn = () => {\r\n    const usernameError = nameValidation(\"Username\", username)\r\n    const passwordError = nameValidation(\"Password\", password)\r\n\r\n    if (!usernameError && !passwordError) {\r\n      state.socket.emit(\"login\", { username, password })\r\n    }\r\n    else {\r\n      const allErrors: string[] = [];\r\n      [usernameError, passwordError].forEach((error: string | null) => {\r\n        if (error && error.length > 0) {\r\n          allErrors.push(error)\r\n        }\r\n      })\r\n      setErrorMessage(allErrors)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex center\" onKeyPress ={(e) => { if (e.key === \"Enter\") { logIn() } }}>\r\n      <div className=\"col-3 p-0 flex center\">\r\n        <h3>Welcome to Games Night</h3>\r\n        <div className=\"error-message col-12\">\r\n          {state.authState.errorMessage}\r\n          {errorMessage.map((error: string) => (\r\n            <div className=\"col-12 p-0 error-message\">\r\n              {error}\r\n            </div>))\r\n          }\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Username\"\r\n            className=\"col-12\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(value: ChangeEvent<any>) => setUsername(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            aria-label=\"Password\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setPassword(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n\r\n        <Button onClick={() => logIn()}>Log in</Button>\r\n        <div className=\"col-12\">\r\n          New here? <Link to=\"/sign-up\"> Sign up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx",["97","98"],"import React, { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../context/context';\r\n\r\nfunction Landing() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  \r\n  useEffect(() => {\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex fill\">\r\n      Landing Page\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Groups.tsx",["99","100","101"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Profile.tsx",["102"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx",["103"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../context/context';\r\nimport { AuthState } from '../../context/types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { emailValidation, nameValidation } from '../../utils/inputUtils';\r\n\r\nfunction Register() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState([] as string[])\r\n  const [email, setEmail] = useState('')\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    state.socket.on(\"register-response\", (res: AuthState) => {\r\n      if (res.loggedIn) {\r\n        dispatch({ type: \"LOGIN\", payload: res })\r\n        history.push(\"/\");\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const registerUser = () => {\r\n    const usernameError = nameValidation(\"Username\", username)\r\n    const passwordError = nameValidation(\"Password\", password)\r\n    const emailError = emailValidation(email)\r\n\r\n    if (!usernameError && !passwordError && !emailError) {\r\n      state.socket.emit(\"register\", { username, password, email })\r\n\r\n    }\r\n    else {\r\n      const allErrors: string[] = [];\r\n      [usernameError, passwordError, emailError].forEach((error: string | null) => {\r\n        if (error && error.length > 0) {\r\n          allErrors.push(error)\r\n        }\r\n      })\r\n      setErrorMessage(allErrors)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex center\">\r\n      <div className=\"col-3 p-0 flex center\">\r\n        <h3>Join the club</h3>\r\n        <div className=\"error-message col-12\">\r\n          {state.authState.errorMessage}\r\n          {errorMessage.map((error: string) => (\r\n            <div className=\"col-12 p-0 error-message\">\r\n              {error}\r\n            </div>))\r\n          }\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Email\"\r\n            aria-label=\"Email\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setEmail(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Username\"\r\n            className=\"col-12\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(value: ChangeEvent<any>) => setUsername(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            aria-label=\"Password\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setPassword(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Button onClick={() => registerUser()}>Sign up</Button>\r\n\r\n        <div className=\"col-12 mt-3\">\r\n          Already have an account? <Link to=\"/\">Log in</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":17,"nodeType":"110","messageId":"111","endLine":6,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":11,"column":6,"nodeType":"114","endLine":11,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":27,"nodeType":"118","messageId":"119","endLine":7,"endColumn":6},{"ruleId":"116","severity":1,"message":"117","line":8,"column":27,"nodeType":"118","messageId":"119","endLine":10,"endColumn":6},{"ruleId":"104","replacedBy":"120"},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","severity":1,"message":"109","line":12,"column":17,"nodeType":"110","messageId":"111","endLine":12,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":17,"column":6,"nodeType":"114","endLine":17,"endColumn":8,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"123","line":19,"column":6,"nodeType":"114","endLine":19,"endColumn":8,"suggestions":"124"},{"ruleId":"108","severity":1,"message":"125","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":5,"column":17,"nodeType":"110","messageId":"111","endLine":5,"endColumn":25},{"ruleId":"108","severity":1,"message":"126","line":3,"column":38,"nodeType":"110","messageId":"111","endLine":3,"endColumn":52},{"ruleId":"108","severity":1,"message":"109","line":10,"column":17,"nodeType":"110","messageId":"111","endLine":10,"endColumn":25},{"ruleId":"112","severity":1,"message":"127","line":22,"column":6,"nodeType":"114","endLine":22,"endColumn":8,"suggestions":"128"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":17,"nodeType":"110","messageId":"111","endLine":6,"endColumn":25},{"ruleId":"112","severity":1,"message":"129","line":23,"column":6,"nodeType":"114","endLine":23,"endColumn":8,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.socket'. Either include it or remove the dependency array.","ArrayExpression",["133"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["131"],["132"],["134"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state.socket'. Either include them or remove the dependency array.",["135"],"'state' is assigned a value but never used.","'addUserMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'state.authState.username' and 'state.socket'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state.socket'. Either include them or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [state.socket]",{"range":"147","text":"148"},{"range":"149","text":"148"},"Update the dependencies array to be: [dispatch, state.socket]",{"range":"150","text":"151"},"Update the dependencies array to be: [state.authState.username, state.socket]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, history, state.socket]",{"range":"154","text":"155"},[359,361],"[state.socket]",[717,719],[758,760],"[dispatch, state.socket]",[878,880],"[state.authState.username, state.socket]",[908,910],"[dispatch, history, state.socket]"]