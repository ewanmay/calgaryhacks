[{"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx":"1","C:\\Workspaces\\wec-practice\\client\\src\\App.tsx":"2","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx":"3","C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx":"4","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx":"5","C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx":"6","C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx":"7","C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx":"8","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx":"9","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx":"10","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx":"11","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx":"12","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx":"13","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx":"14","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Groups.tsx":"15","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Profile.tsx":"16","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx":"17","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts":"18","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx":"19","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\ConnectSteamModal.tsx":"20","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\Chat.tsx":"21","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\UserList.tsx":"22"},{"size":328,"mtime":1610480469272,"results":"23","hashOfConfig":"24"},{"size":459,"mtime":1610480469266,"results":"25","hashOfConfig":"24"},{"size":532,"mtime":1610480469270,"results":"26","hashOfConfig":"24"},{"size":308,"mtime":1610480469270,"results":"27","hashOfConfig":"24"},{"size":121,"mtime":1610480469269,"results":"28","hashOfConfig":"24"},{"size":120,"mtime":1610480469269,"results":"29","hashOfConfig":"24"},{"size":425,"mtime":1613243649345,"results":"30","hashOfConfig":"31"},{"size":1661,"mtime":1613265399039,"results":"32","hashOfConfig":"31"},{"size":532,"mtime":1613237454258,"results":"33","hashOfConfig":"31"},{"size":471,"mtime":1613256610981,"results":"34","hashOfConfig":"31"},{"size":429,"mtime":1613252990905,"results":"35","hashOfConfig":"31"},{"size":278,"mtime":1613238644072,"results":"36","hashOfConfig":"31"},{"size":2636,"mtime":1613249703770,"results":"37","hashOfConfig":"31"},{"size":873,"mtime":1613264852318,"results":"38","hashOfConfig":"31"},{"size":4836,"mtime":1613265161621,"results":"39","hashOfConfig":"31"},{"size":1576,"mtime":1613265480127,"results":"40","hashOfConfig":"31"},{"size":3123,"mtime":1613249254839,"results":"41","hashOfConfig":"31"},{"size":600,"mtime":1613254589259,"results":"42","hashOfConfig":"31"},{"size":1284,"mtime":1613252044862,"results":"43","hashOfConfig":"31"},{"size":1434,"mtime":1613265355453,"results":"44","hashOfConfig":"31"},{"size":3061,"mtime":1613261846103,"results":"45","hashOfConfig":"31"},{"size":1043,"mtime":1613263537590,"results":"46","hashOfConfig":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1334qxy",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1w7oxx",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx",[],["97","98"],"C:\\Workspaces\\wec-practice\\client\\src\\App.tsx",["99","100"],"import React, { useContext, useEffect } from 'react';\nimport { AppContext } from './context/context';\nimport './App.css';\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext)\n  \n  useEffect(() => {\n    setInterval(() => state.socket.emit(\"hello\"), 2000);    \n    state.socket.on('hello-response', () => console.log(\"server said hello\"));\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      Hello there\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx",["101","102"],"import { State } from \"./types\";\r\n\r\nexport const reducer = (state: State, action: Record<string, any>): State => {\r\n  switch (action.type) {\r\n    case \"ACTION_TYPE_1\": {\r\n      return state;\r\n    };\r\n    case \"ACTION_TYPE_2\": {\r\n      return state;\r\n    };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx",[],["103","104"],"C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx",["105"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppContext } from '../../context/context';\r\nimport { AuthState } from '../../context/types';\r\nimport { nameValidation } from '../../utils/inputUtils';\r\nimport './Auth.css';\r\n\r\nfunction Auth() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState([] as string[])\r\n\r\n  useEffect(() => {\r\n    state.socket.on('login-response', (login: AuthState) => {\r\n      dispatch({ type: \"LOGIN\", payload: login })\r\n    })\r\n  }, [])\r\n\r\n  const logIn = () => {\r\n    const usernameError = nameValidation(\"Username\", username)\r\n    const passwordError = nameValidation(\"Password\", password)\r\n\r\n    if (!usernameError && !passwordError) {\r\n      state.socket.emit(\"login\", { username, password })\r\n    }\r\n    else {\r\n      const allErrors: string[] = [];\r\n      [usernameError, passwordError].forEach((error: string | null) => {\r\n        if (error && error.length > 0) {\r\n          allErrors.push(error)\r\n        }\r\n      })\r\n      setErrorMessage(allErrors)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex center\" onKeyPress ={(e) => { if (e.key === \"Enter\") { logIn() } }}>\r\n      <div className=\"col-3 p-0 flex center\">\r\n        <h3>Welcome to Games Night</h3>\r\n        <div className=\"error-message col-12\">\r\n          {state.authState.errorMessage}\r\n          {errorMessage.map((error: string) => (\r\n            <div className=\"col-12 p-0 error-message\">\r\n              {error}\r\n            </div>))\r\n          }\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Username\"\r\n            className=\"col-12\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(value: ChangeEvent<any>) => setUsername(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            aria-label=\"Password\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setPassword(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n\r\n        <Button onClick={() => logIn()}>Log in</Button>\r\n        <div className=\"col-12\">\r\n          New here? <Link to=\"/sign-up\"> Sign up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx",["106"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Groups.tsx",["107","108","109"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Profile.tsx",["110","111","112","113","114","115","116"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx",["117"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../context/context';\r\nimport { AuthState } from '../../context/types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { emailValidation, nameValidation } from '../../utils/inputUtils';\r\n\r\nfunction Register() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState([] as string[])\r\n  const [email, setEmail] = useState('')\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    state.socket.on(\"register-response\", (res: AuthState) => {\r\n      if (res.loggedIn) {\r\n        dispatch({ type: \"LOGIN\", payload: res })\r\n        history.push(\"/\");\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const registerUser = () => {\r\n    const usernameError = nameValidation(\"Username\", username)\r\n    const passwordError = nameValidation(\"Password\", password)\r\n    const emailError = emailValidation(email)\r\n\r\n    if (!usernameError && !passwordError && !emailError) {\r\n      state.socket.emit(\"register\", { username, password, email })\r\n\r\n    }\r\n    else {\r\n      const allErrors: string[] = [];\r\n      [usernameError, passwordError, emailError].forEach((error: string | null) => {\r\n        if (error && error.length > 0) {\r\n          allErrors.push(error)\r\n        }\r\n      })\r\n      setErrorMessage(allErrors)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex center\">\r\n      <div className=\"col-3 p-0 flex center\">\r\n        <h3>Join the club</h3>\r\n        <div className=\"error-message col-12\">\r\n          {state.authState.errorMessage}\r\n          {errorMessage.map((error: string) => (\r\n            <div className=\"col-12 p-0 error-message\">\r\n              {error}\r\n            </div>))\r\n          }\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Email\"\r\n            aria-label=\"Email\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setEmail(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Username\"\r\n            className=\"col-12\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(value: ChangeEvent<any>) => setUsername(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            aria-label=\"Password\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setPassword(value.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Button onClick={() => registerUser()}>Sign up</Button>\r\n\r\n        <div className=\"col-12 mt-3\">\r\n          Already have an account? <Link to=\"/\">Log in</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\ConnectSteamModal.tsx",["118"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\Chat.tsx",["119","120"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\UserList.tsx",["121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":17,"nodeType":"130","messageId":"131","endLine":6,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":11,"column":6,"nodeType":"134","endLine":11,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":27,"nodeType":"138","messageId":"139","endLine":7,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":8,"column":27,"nodeType":"138","messageId":"139","endLine":10,"endColumn":6},{"ruleId":"124","replacedBy":"140"},{"ruleId":"126","replacedBy":"141"},{"ruleId":"132","severity":1,"message":"142","line":19,"column":6,"nodeType":"134","endLine":19,"endColumn":8,"suggestions":"143"},{"ruleId":"128","severity":1,"message":"129","line":5,"column":17,"nodeType":"130","messageId":"131","endLine":5,"endColumn":25},{"ruleId":"128","severity":1,"message":"144","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":14,"column":17,"nodeType":"130","messageId":"131","endLine":14,"endColumn":25},{"ruleId":"128","severity":1,"message":"145","line":44,"column":9,"nodeType":"130","messageId":"131","endLine":44,"endColumn":29},{"ruleId":"128","severity":1,"message":"146","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"147","line":2,"column":18,"nodeType":"130","messageId":"131","endLine":2,"endColumn":29},{"ruleId":"128","severity":1,"message":"148","line":2,"column":31,"nodeType":"130","messageId":"131","endLine":2,"endColumn":41},{"ruleId":"128","severity":1,"message":"129","line":9,"column":17,"nodeType":"130","messageId":"131","endLine":9,"endColumn":25},{"ruleId":"128","severity":1,"message":"149","line":10,"column":10,"nodeType":"130","messageId":"131","endLine":10,"endColumn":17},{"ruleId":"128","severity":1,"message":"150","line":10,"column":19,"nodeType":"130","messageId":"131","endLine":10,"endColumn":29},{"ruleId":"132","severity":1,"message":"151","line":16,"column":6,"nodeType":"134","endLine":16,"endColumn":8,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"153","line":23,"column":6,"nodeType":"134","endLine":23,"endColumn":8,"suggestions":"154"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":17,"nodeType":"130","messageId":"131","endLine":10,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":28,"column":17,"nodeType":"130","messageId":"131","endLine":28,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":67,"column":17,"nodeType":"130","messageId":"131","endLine":67,"endColumn":25},{"ruleId":"128","severity":1,"message":"155","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":13,"column":19,"nodeType":"130","messageId":"131","endLine":13,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":20,"column":10,"nodeType":"134","endLine":20,"endColumn":12,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.socket'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["157"],["158"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state.socket'. Either include them or remove the dependency array.",["160"],"'Widget' is defined but never used.","'handleNewUserMessage' is assigned a value but never used.","'ChangeEvent' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'steamId' is assigned a value but never used.","'setSteamId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.authState.username' and 'state.socket'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state.socket'. Either include them or remove the dependency array.",["162"],"'User' is defined but never used.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"164","fix":"172"},"Update the dependencies array to be: [state.socket]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch, state.socket]",{"range":"175","text":"176"},"Update the dependencies array to be: [state.authState.username, state.socket]",{"range":"177","text":"178"},"Update the dependencies array to be: [dispatch, history, state.socket]",{"range":"179","text":"180"},{"range":"181","text":"174"},[359,361],"[state.socket]",[758,760],"[dispatch, state.socket]",[635,637],"[state.authState.username, state.socket]",[908,910],"[dispatch, history, state.socket]",[544,546]]