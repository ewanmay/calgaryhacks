[{"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx":"1","C:\\Workspaces\\wec-practice\\client\\src\\App.tsx":"2","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx":"3","C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx":"4","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx":"5","C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx":"6","C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx":"7","C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx":"8","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx":"9","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx":"10","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx":"11","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx":"12","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx":"13","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx":"14","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Groups.tsx":"15","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Profile.tsx":"16","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx":"17","C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts":"18","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx":"19","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\ConnectSteamModal.tsx":"20","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\Chat.tsx":"21","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\UserList.tsx":"22","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\CommonGames.tsx":"23","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\GameItem.tsx":"24","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\SetPlayerModal.tsx":"25","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoChat.tsx":"26","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoParticipant.tsx":"27","C:\\Workspaces\\calgaryhacks\\client\\src\\context\\types.ts":"28","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Friends.tsx":"29"},{"size":328,"mtime":1610480469272,"results":"30","hashOfConfig":"31"},{"size":459,"mtime":1610480469266,"results":"32","hashOfConfig":"31"},{"size":532,"mtime":1610480469270,"results":"33","hashOfConfig":"31"},{"size":308,"mtime":1610480469270,"results":"34","hashOfConfig":"31"},{"size":121,"mtime":1610480469269,"results":"35","hashOfConfig":"31"},{"size":120,"mtime":1610480469269,"results":"36","hashOfConfig":"31"},{"size":425,"mtime":1613243649345,"results":"37","hashOfConfig":"38"},{"size":1938,"mtime":1613288092340,"results":"39","hashOfConfig":"38"},{"size":532,"mtime":1613237454258,"results":"40","hashOfConfig":"38"},{"size":555,"mtime":1613270835847,"results":"41","hashOfConfig":"38"},{"size":560,"mtime":1613278799345,"results":"42","hashOfConfig":"38"},{"size":278,"mtime":1613238644072,"results":"43","hashOfConfig":"38"},{"size":2691,"mtime":1613285411625,"results":"44","hashOfConfig":"38"},{"size":876,"mtime":1613280074226,"results":"45","hashOfConfig":"38"},{"size":4345,"mtime":1613288354304,"results":"46","hashOfConfig":"38"},{"size":3639,"mtime":1613288440104,"results":"47","hashOfConfig":"38"},{"size":3128,"mtime":1613288227951,"results":"48","hashOfConfig":"38"},{"size":600,"mtime":1613254589259,"results":"49","hashOfConfig":"38"},{"size":1936,"mtime":1613288500465,"results":"50","hashOfConfig":"38"},{"size":1705,"mtime":1613280009339,"results":"51","hashOfConfig":"38"},{"size":3030,"mtime":1613276554410,"results":"52","hashOfConfig":"38"},{"size":1020,"mtime":1613267687397,"results":"53","hashOfConfig":"38"},{"size":876,"mtime":1613286679791,"results":"54","hashOfConfig":"38"},{"size":1828,"mtime":1613286726713,"results":"55","hashOfConfig":"38"},{"size":3601,"mtime":1613284395970,"results":"56","hashOfConfig":"38"},{"size":2938,"mtime":1613287804354,"results":"57","hashOfConfig":"38"},{"size":2315,"mtime":1613286859878,"results":"58","hashOfConfig":"38"},{"size":1370,"mtime":1613287702992,"results":"59","hashOfConfig":"38"},{"size":466,"mtime":1613288542048,"results":"60","hashOfConfig":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1334qxy",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1w7oxx",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Workspaces\\wec-practice\\client\\src\\index.tsx",[],["128","129"],"C:\\Workspaces\\wec-practice\\client\\src\\App.tsx",["130","131"],"import React, { useContext, useEffect } from 'react';\nimport { AppContext } from './context/context';\nimport './App.css';\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext)\n  \n  useEffect(() => {\n    setInterval(() => state.socket.emit(\"hello\"), 2000);    \n    state.socket.on('hello-response', () => console.log(\"server said hello\"));\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      Hello there\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Workspaces\\wec-practice\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\reducer.tsx",["132","133"],"import { State } from \"./types\";\r\n\r\nexport const reducer = (state: State, action: Record<string, any>): State => {\r\n  switch (action.type) {\r\n    case \"ACTION_TYPE_1\": {\r\n      return state;\r\n    };\r\n    case \"ACTION_TYPE_2\": {\r\n      return state;\r\n    };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","C:\\Workspaces\\wec-practice\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\wec-practice\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\index.tsx",[],["134","135"],"C:\\Workspaces\\calgaryhacks\\client\\src\\App.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\context.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\reducer.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\state.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\socket.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Auth.tsx",["136"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Landing.tsx",["137"],"import React, { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../context/context';\r\nimport './Landing.css';\r\n\r\nfunction Landing() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 flex fill center landing\">  \r\n          <div className=\"col-12 p-0\" style={{ position: 'absolute', top: 15, fontSize: 20}} >\r\n            Welcome back, {state.authState.username}\r\n          </div>\r\n          <div className='test'>\r\n            <div className=\"col-12 p-0 header\">\r\n              Activity\r\n            </div>\r\n            <div className=\"col-12 p-0 header\">\r\n                Find Group\r\n            </div>\r\n            <div className=\"col-12 p-0 header\">\r\n                Recent Games\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Groups.tsx",["138","139"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Profile.tsx",["140","141","142","143"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Register.tsx",["144"],"C:\\Workspaces\\calgaryhacks\\client\\src\\utils\\inputUtils.ts",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\shared\\Navbar.tsx",["145","146"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\ConnectSteamModal.tsx",["147"],"import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../context/context';\r\n\r\ninterface ConnectSteamModalProps {\r\n  close: any\r\n}\r\n\r\nfunction ConnectSteamModal({ close }: ConnectSteamModalProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n\r\n  const [steamId, setSteamId] = useState(\"\")\r\n  const connectSteamId = () => {\r\n    state.socket.emit(\"add-steamid\", state.authState.username, steamId)\r\n    state.socket.on(\"steamid-added\", (succeeded: boolean) => {\r\n      close()\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n  return (\r\n    <div className=\"modal-background flex center\">\r\n      <div className=\"modal flex center column\">\r\n        <div className=\"modal-header\">\r\n          Connect Steam ID\r\n        </div>\r\n        <div className=\"error-message\">\r\n          {state.profile.steam.steamError}\r\n        </div>\r\n        <div>\r\n          You can find your steam ID\r\n          <a href=\"https://store.steampowered.com/account/\">\r\n            here\r\n          </a>\r\n        </div>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Steam ID\"\r\n            aria-label=\"Steam ID\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={(value: ChangeEvent<any>) => setSteamId(value.target.value)}\r\n          />\r\n          <div className=\"col-12 p-0\">\r\n            <Button className=\"m-3\" onClick={connectSteamId}>Connect</Button>\r\n            <Button variant=\"secondary\" onClick={() => close()}>Close</Button>\r\n          </div>\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConnectSteamModal;\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\Chat.tsx",["148","149"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { AppContext } from '../context/context'\r\nimport { ClientMessage, ServerMessage } from '../context/types'\r\nimport './Chat.css'\r\nconst EMOJIS = require('smile2emoji').emojiMap;\r\n\r\nconst TIMESTAMP_OPTIONS = { hour: '2-digit', minute: '2-digit', hour12: false }\r\n\r\n\r\nfunction emojify(text: string) {\r\n  for (const [trigger, emoji] of Object.entries(EMOJIS)) {\r\n    text = text.replace(trigger as string, emoji as string)\r\n  }\r\n  return text\r\n}\r\ninterface MessageProps {\r\n  m: ServerMessage\r\n}\r\n\r\nfunction Message({m}: MessageProps) {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const {username, messageContents, date} = m\r\n\r\n  function renderTime(date: string) {\r\n    const d = new Date(date)\r\n    return d.toLocaleTimeString('en-US', TIMESTAMP_OPTIONS)\r\n  }\r\n\r\n  const isSelf = username === state.authState.username\r\n  const msgStyle = {\r\n    background: isSelf ? '#35917d' : '#eee',\r\n    color: isSelf ? 'white' : 'black',\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='msgContainer'\r\n      style={{\r\n        justifyContent: isSelf ? 'flex-end' : 'flex-start',\r\n      }}\r\n    >\r\n      <li\r\n        style={{\r\n          alignItems: isSelf ? 'flex-end' : 'flex-start',\r\n        }}\r\n      >\r\n        <div className='details'>\r\n          <span className='timestamp'>{renderTime(date)}</span>\r\n          <span className='username'>{username}</span>\r\n        </div>\r\n        <div className='msg' style={msgStyle}>\r\n          {messageContents}\r\n        </div>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Chat() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [text, setText] = useState('')\r\n  const [messages, setMessages] = useState([] as ServerMessage[])\r\n\r\n  function createMessage(msg: string): ClientMessage  {\r\n    return {\r\n      username: state.authState.username,\r\n      messageContents: msg\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    state.socket.on('message-log', function (msgs: ServerMessage[]) {\r\n      console.log('got messages', msgs.length)\r\n      setMessages(msgs)\r\n    })\r\n  }, [state.socket])\r\n\r\n\r\n  useEffect(() => {\r\n    // when msgs change, scroll to bottom\r\n    const elem = document.getElementById('messages')\r\n    if (elem) elem.scrollTop = elem.scrollHeight\r\n  }, [messages])\r\n\r\n  function handleSend(e: any) {\r\n    e.preventDefault() // prevent refresh\r\n    if (text.trim()) {\r\n      state.socket.emit('add-chat-message', createMessage(text))\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  return (\r\n    <div id='chat'>\r\n      <div id='messagesContainer'>\r\n        <ul id='messages'>\r\n          {messages.map((m: ServerMessage, i) => (\r\n            <Message key={i} m={m} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <form id='chat-form' onSubmit={handleSend}>\r\n        <input\r\n          id='chat-input'\r\n          value={text}\r\n          onChange={e => setText(emojify(e.target.value))}\r\n          autoComplete='off'\r\n        />\r\n        <button>Send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\UserList.tsx",["150","151","152"],"\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AppContext } from '../context/context'\r\nimport { User } from '../context/types'\r\nimport './UserList.css'\r\n\r\ninterface LobbyInfo {\r\n  users: string[],\r\n  lobbyCode: string\r\n}\r\n\r\nfunction Userlist() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [userList, setUserList] = useState([] as string[])\r\n\r\n  useEffect(() => {\r\n    state.socket.on('lobby-updated', function ({ users }: LobbyInfo) {\r\n      setUserList(users)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div id='userlist'>\r\n      <div>Online ({userList.length})</div>\r\n      {userList.map((username: string, i: number) => {\r\n        const isSelf = username === state.authState.username\r\n        return (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              fontWeight: isSelf ? 'bold' : 'normal'\r\n            }}\r\n          >\r\n            {username + (isSelf ? ' (You)' : '')}\r\n          </p>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Userlist","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\CommonGames.tsx",["153"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\GameItem.tsx",["154","155","156","157"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\SetPlayerModal.tsx",["158"],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoChat.tsx",["159"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from '../context/context';\r\nimport Video from 'twilio-video';\r\nimport { Button } from 'react-bootstrap';\r\nimport VideoParticipant from './VideoParticipant'\r\ninterface Props {\r\n  roomName: string\r\n}\r\n\r\nconst VideoChat = ({ roomName }: Props) => {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const [room, setRoom] = useState(null as any);\r\n  const [participants, setParticipants] = useState([] as any[]);\r\n  const [token, setToken] = useState('')\r\n  \r\n  useEffect(() => {\r\n    const participantConnected = (participant: any) => {\r\n      setParticipants((prevParticipants: any) => [...prevParticipants, participant]);\r\n    };\r\n    const participantDisconnected = (participant: any) => {\r\n      setParticipants((prevParticipants: any) =>\r\n        prevParticipants.filter((p: any) => p !== participant)\r\n      );\r\n    };\r\n\r\n    if (token) {\r\n      Video.connect((token), {\r\n        name: roomName\r\n      }).then((room: any) => {\r\n        setRoom(room);\r\n        room.on('participantConnected', participantConnected);\r\n        room.on('participantDisconnected', participantDisconnected);\r\n        room.participants.forEach(participantConnected);\r\n      });\r\n    }\r\n      \r\n      return () => {\r\n        setRoom((currentRoom: any) => {\r\n        if (currentRoom && currentRoom.localParticipant.state === 'connected') {\r\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication: any) {\r\n            trackPublication.track.stop();\r\n          });\r\n          currentRoom.disconnect();\r\n          return null;\r\n        } else {\r\n          return currentRoom;\r\n        }\r\n      });\r\n    };\r\n  }, [roomName, token]);\r\n\r\n  const leaveVideo = () => {\r\n    setToken(\"\");\r\n  };\r\n\r\n\r\n  const getToken = () => {\r\n    state.socket.on('token', (token: string) => {\r\n      console.log(\"got token:\", token.slice(-10))\r\n      setToken(token);\r\n    })\r\n    state.socket.emit('get-token', state.authState.username)\r\n  };\r\n\r\n\r\n  const remoteParticipants = participants.map((participant: any) => (\r\n    <VideoParticipant key={participant.sid} participant={participant} />\r\n  ));\r\n\r\n\r\n  if (token) {\r\n    return (\r\n      <div id='video-chat-container'>  \r\n        <div id='video-chat'>\r\n          {room && (\r\n            <VideoParticipant\r\n              key={room?.localParticipant?.sid}\r\n              participant={room?.localParticipant}\r\n            />\r\n          )}          \r\n          {remoteParticipants}\r\n        </div>\r\n        <div>\r\n          <Button onClick={leaveVideo}>Leave Video</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (      \r\n      <div className=\"col-12 flex fill\" style={{justifyContent: 'flex-end'}}>\r\n        <div className=\"col-1\" style={{marginRight: 20}}>\r\n          <Button onClick={getToken}>Join Video</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoChat\r\n","C:\\Workspaces\\calgaryhacks\\client\\src\\components\\VideoParticipant.tsx",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\context\\types.ts",[],"C:\\Workspaces\\calgaryhacks\\client\\src\\components\\pages\\Friends.tsx",["160","161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":6,"column":17,"nodeType":"169","messageId":"170","endLine":6,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":11,"column":6,"nodeType":"173","endLine":11,"endColumn":8,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":5,"column":27,"nodeType":"177","messageId":"178","endLine":7,"endColumn":6},{"ruleId":"175","severity":1,"message":"176","line":8,"column":27,"nodeType":"177","messageId":"178","endLine":10,"endColumn":6},{"ruleId":"163","replacedBy":"179"},{"ruleId":"165","replacedBy":"180"},{"ruleId":"171","severity":1,"message":"181","line":19,"column":6,"nodeType":"173","endLine":19,"endColumn":8,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"168","line":6,"column":17,"nodeType":"169","messageId":"170","endLine":6,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":14,"column":17,"nodeType":"169","messageId":"170","endLine":14,"endColumn":25},{"ruleId":"171","severity":1,"message":"183","line":24,"column":6,"nodeType":"173","endLine":24,"endColumn":8,"suggestions":"184"},{"ruleId":"167","severity":1,"message":"168","line":12,"column":17,"nodeType":"169","messageId":"170","endLine":12,"endColumn":25},{"ruleId":"167","severity":1,"message":"185","line":13,"column":10,"nodeType":"169","messageId":"170","endLine":13,"endColumn":17},{"ruleId":"167","severity":1,"message":"186","line":13,"column":19,"nodeType":"169","messageId":"170","endLine":13,"endColumn":29},{"ruleId":"171","severity":1,"message":"187","line":25,"column":6,"nodeType":"173","endLine":25,"endColumn":8,"suggestions":"188"},{"ruleId":"171","severity":1,"message":"189","line":23,"column":6,"nodeType":"173","endLine":23,"endColumn":8,"suggestions":"190"},{"ruleId":"167","severity":1,"message":"191","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":16},{"ruleId":"167","severity":1,"message":"192","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":10,"column":17,"nodeType":"169","messageId":"170","endLine":10,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":21,"column":17,"nodeType":"169","messageId":"170","endLine":21,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":60,"column":17,"nodeType":"169","messageId":"170","endLine":60,"endColumn":25},{"ruleId":"167","severity":1,"message":"193","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":13,"column":17,"nodeType":"169","messageId":"170","endLine":13,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":20,"column":6,"nodeType":"173","endLine":20,"endColumn":8,"suggestions":"194"},{"ruleId":"167","severity":1,"message":"168","line":7,"column":17,"nodeType":"169","messageId":"170","endLine":7,"endColumn":25},{"ruleId":"167","severity":1,"message":"195","line":3,"column":29,"nodeType":"169","messageId":"170","endLine":3,"endColumn":38},{"ruleId":"167","severity":1,"message":"196","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":16},{"ruleId":"167","severity":1,"message":"192","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":14,"column":17,"nodeType":"169","messageId":"170","endLine":14,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":12,"column":17,"nodeType":"169","messageId":"170","endLine":12,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":11,"column":17,"nodeType":"169","messageId":"170","endLine":11,"endColumn":25},{"ruleId":"167","severity":1,"message":"197","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"192","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":8,"column":17,"nodeType":"169","messageId":"170","endLine":8,"endColumn":25},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.socket'. Either include it or remove the dependency array.","ArrayExpression",["200"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["198"],["199"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state.socket'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'leaveLobby'. Either include it or remove the dependency array.",["202"],"'steamId' is assigned a value but never used.","'setSteamId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.authState.username' and 'state.socket'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state.socket'. Either include them or remove the dependency array.",["204"],"'faUser' is defined but never used.","'state' is assigned a value but never used.","'User' is defined but never used.",["205"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'Game' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"206","fix":"216"},"Update the dependencies array to be: [state.socket]",{"range":"217","text":"218"},"Update the dependencies array to be: [dispatch, state.socket]",{"range":"219","text":"220"},"Update the dependencies array to be: [leaveLobby]",{"range":"221","text":"222"},"Update the dependencies array to be: [state.authState.username, state.socket]",{"range":"223","text":"224"},"Update the dependencies array to be: [dispatch, history, state.socket]",{"range":"225","text":"226"},{"range":"227","text":"218"},[359,361],"[state.socket]",[758,760],"[dispatch, state.socket]",[909,911],"[leaveLobby]",[1003,1005],"[state.authState.username, state.socket]",[908,910],"[dispatch, history, state.socket]",[521,523]]